name: "Lint Charts"
description: "Setup and lint the helm charts"
inputs:
  skip-setup:
    description: "Skip the setup process if it has been run in the same job already"
    required: false
    default: "false"
  default-branch:
    description: "The default branch. master|main"
    required: true
  chart-directory:
    description: "Path to the chart: ./charts/android-version-service"
    required: true
  aws-access-key-id:
    description: "AWS key for helm charts"
    required: true
  aws-secret-access-key:
    description: "AWS secret for helm charts"
    required: true
  test-production:
    description: "Test the templating of production values"
    required: false
    default: "true"
  test-staging:
    description: "Test the templating of staging values"
    required: false
    default: "true"
  test-local:
    description: "Test the templating of local values"
    required: false
    default: "true"

runs:
  using: "composite"
  steps:
    - name: Setup Helm
      if: ${{ inputs.skip-setup == 'false' }}
      uses: azure/setup-helm@v1
      with:
        version: v3.4.0

    - name: Setup Chart Testing Tool
      if: ${{ inputs.skip-setup == 'false' }}
      uses: helm/chart-testing-action@v2.1.0

    - name: Setup Helm S3 Plugin
      if: ${{ inputs.skip-setup == 'false' }}
      shell: bash
      run: |
        helm plugin install https://github.com/hypnoglow/helm-s3.git --version 0.12.0

    - name: Configure AWS Credentials
      if: ${{ inputs.skip-setup == 'false' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: us-west-2

    - name: Run Chart Changes Test
      id: list-changed
      shell: bash
      run: |
        changed=$(ct list-changed)
        if [[ -n "$changed" ]]; then
          echo "::set-output name=changed::true"
        fi
      env:
        CT_CHART_DIRS: charts
        CT_VALIDATE_MAINTAINERS: false
        CT_TARGET_BRANCH: ${{ inputs.default-branch }}

    - name: Run Chart Linting Test
      shell: bash
      run: ct lint
      env:
        CT_CHART_DIRS: charts
        CT_VALIDATE_MAINTAINERS: false

    - name: Update Chart Dependencies
      shell: bash
      run: |
        helm dependency update ${{ inputs.chart-directory }}

    - name: Template Production Charts
      shell: bash
      if: ${{ inputs.test-production == 'true' }}
      run: helm template ${{ inputs.chart-directory }} -f ${{ inputs.chart-directory }}/values-production.yaml

    - name: Template Staging Charts
      shell: bash
      if: ${{ inputs.test-staging == 'true' }}
      run: helm template ${{ inputs.chart-directory }} -f ${{ inputs.chart-directory }}/values-staging.yaml

    - name: Template Local Charts
      shell: bash
      if: ${{ inputs.test-local == 'true' }}
      run: helm template ${{ inputs.chart-directory }} -f ${{ inputs.chart-directory }}/values.yaml
