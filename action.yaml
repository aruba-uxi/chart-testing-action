name: "Lint Charts"
description: "Setup and lint the helm charts"
inputs:
  aws-access-key-id:
    description: "AWS key for helm charts"
    required: true
  aws-region:
    description: "The AWS region where there S3 bucket is created"
    required: true
  aws-secret-access-key:
    description: "AWS secret for helm charts"
    required: true
  chart-directory:
    description: "Path to the charts"
    required: true
  default-branch:
    description: "The default branch. master|main"
    required: true
  deployment-name:
    description: "The name of the helm deployment"
    required: true
  skip-aws-setup:
    description: "Skip the AWS setup process if it has been run in the same job already"
    required: false
    default: "false"
  skip-helm-setup:
    description: "Skip the helm setup process if it has been run in the same job already"
    required: false
    default: "false"
  skip-python-setup:
    description: "Skip the Python setup process if it has been run in the same job already"
    required: false
    default: "false"
  test-local:
    description: "Test the templating of local values"
    required: false
    default: "true"
  test-production:
    description: "Test the templating of production values"
    required: false
    default: "true"
  test-staging:
    description: "Test the templating of staging values"
    required: false
    default: "true"
  skip-version-bump-check:
    description: "Skip checking for a version bump"
    required: false
    default: "false"

runs:
  using: "composite"
  steps:
    - name: Setup Python
      if: ${{ inputs.skip-python-setup == 'false' }}
      uses: actions/setup-python@v2
      with:
        python-version: 3.8

    - name: Setup Helm
      if: ${{ inputs.skip-helm-setup == 'false' }}
      uses: azure/setup-helm@v3
      with:
        version: v3.11.1

    - name: Setup Helm S3 Plugin
      if: ${{ inputs.skip-helm-setup == 'false' }}
      shell: bash
      run: |
        helm plugin install https://github.com/hypnoglow/helm-s3.git --version 0.14.0

    - name: Setup Chart Testing Tool
      if: ${{ inputs.skip-helm-setup == 'false' }}
      uses: helm/chart-testing-action@v2.3.1

    - name: Configure AWS Credentials
      if: ${{ inputs.skip-aws-setup == 'false' }}
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ inputs.aws-access-key-id }}
        aws-secret-access-key: ${{ inputs.aws-secret-access-key }}
        aws-region: ${{ inputs.aws-region }}

    - name: Run Chart Changes Test
      id: list-changed
      shell: bash
      run: |
        changed=$(ct list-changed)
        if [[ -n "$changed" ]]; then
          echo "::set-output name=changed::true"
        fi
      env:
        CT_CHART_DIRS: charts
        CT_VALIDATE_MAINTAINERS: false
        CT_TARGET_BRANCH: ${{ inputs.default-branch }}

    - name: Run Chart Linting Test (skip version bump)
      shell: bash
      if: ${{ inputs.skip-version-bump-check == 'true' }}
      run: ct lint
      env:
        CT_CHART_DIRS: charts
        CT_VALIDATE_MAINTAINERS: false
        CT_CHECK_VERSION_INCREMENT: false
        CT_TARGET_BRANCH: ${{ inputs.default-branch }}

    - name: Run Chart Linting Test
      shell: bash
      if: ${{ inputs.skip-version-bump-check == 'false' }}
      run: ct lint
      env:
        CT_CHART_DIRS: charts
        CT_VALIDATE_MAINTAINERS: false
        CT_TARGET_BRANCH: ${{ inputs.default-branch }}

    - name: Update Chart Dependencies
      shell: bash
      run: |
        helm repo add aruba-uxi s3://hpe-uxi-helm-repo
        helm dependency update ${{ inputs.chart-directory }}

    - name: Template Production Charts
      shell: bash
      if: ${{ inputs.test-production == 'true' }}
      run: helm template ${{ inputs.deployment-name }} ${{ inputs.chart-directory }} -n ${{ inputs.deployment-name }} -f ${{ inputs.chart-directory }}/values.yaml -f ${{ inputs.chart-directory }}/values-production.yaml

    - name: Template Staging Charts
      shell: bash
      if: ${{ inputs.test-staging == 'true' }}
      run: helm template ${{ inputs.deployment-name }} ${{ inputs.chart-directory }} -n ${{ inputs.deployment-name }} -f ${{ inputs.chart-directory }}/values.yaml -f ${{ inputs.chart-directory }}/values-staging.yaml

    - name: Template Local Charts
      shell: bash
      if: ${{ inputs.test-local == 'true' }}
      run: helm template ${{ inputs.deployment-name }} ${{ inputs.chart-directory }} -n ${{ inputs.deployment-name }} -f ${{ inputs.chart-directory }}/values.yaml
